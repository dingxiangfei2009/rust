error[E0802]: `CoercePointee` can only be derived on `struct`s with `#[repr(transparent)]`
  --> $DIR/deriving-coerce-pointee-neg.rs:10:10
   |
LL | #[derive(CoercePointee)]
   |          ^^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `CoercePointee` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0802]: `CoercePointee` can only be derived on `struct`s that are generic over at least one type
  --> $DIR/deriving-coerce-pointee-neg.rs:30:10
   |
LL | #[derive(CoercePointee)]
   |          ^^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `CoercePointee` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0802]: exactly one generic type parameter must be marked as `#[pointee]` to derive `CoercePointee` traits
  --> $DIR/deriving-coerce-pointee-neg.rs:35:10
   |
LL | #[derive(CoercePointee)]
   |          ^^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `CoercePointee` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0802]: only one type parameter can be marked as `#[pointee]` when deriving `CoercePointee` traits
  --> $DIR/deriving-coerce-pointee-neg.rs:44:39
   |
LL | struct TooManyPointees<'a, #[pointee] A: ?Sized, #[pointee] B: ?Sized>((&'a A, &'a B));
   |                                       ^                     - here another type parameter is marked as `#[pointee]`

error: the `#[pointee]` attribute may only be used on generic parameters
  --> $DIR/deriving-coerce-pointee-neg.rs:63:5
   |
LL |     #[pointee]
   |     ^^^^^^^^^^

error: the `#[pointee]` attribute may only be used on generic parameters
  --> $DIR/deriving-coerce-pointee-neg.rs:73:33
   |
LL |                     struct UhOh<#[pointee] T>(T);
   |                                 ^^^^^^^^^^

error: the `#[pointee]` attribute may only be used on generic parameters
  --> $DIR/deriving-coerce-pointee-neg.rs:87:21
   |
LL |         struct UhOh<#[pointee] T>(T);
   |                     ^^^^^^^^^^

error: the `#[pointee]` attribute may only be used on generic parameters
  --> $DIR/deriving-coerce-pointee-neg.rs:102:25
   |
LL |             struct UhOh<#[pointee] T>(T);
   |                         ^^^^^^^^^^

error[E0392]: lifetime parameter `'a` is never used
  --> $DIR/deriving-coerce-pointee-neg.rs:18:16
   |
LL | struct NoField<'a, #[pointee] T: ?Sized> {}
   |                ^^ unused lifetime parameter
   |
   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`

error[E0392]: type parameter `T` is never used
  --> $DIR/deriving-coerce-pointee-neg.rs:18:31
   |
LL | struct NoField<'a, #[pointee] T: ?Sized> {}
   |                               ^ unused type parameter
   |
   = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`

error[E0802]: `derive(CoercePointee)` is only applicable to `struct` with `repr(transparent)` layout
  --> $DIR/deriving-coerce-pointee-neg.rs:48:1
   |
LL | struct NotTransparent<'a, #[pointee] T: ?Sized> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0802]: `derive(CoercePointee)` requires the `#[pointee]` to be `?Sized`
  --> $DIR/deriving-coerce-pointee-neg.rs:55:1
   |
LL | struct NoMaybeSized<'a, #[pointee] T> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0802]: `derive(CoercePointee)` is only applicable to `struct` with `repr(transparent)` layout
  --> $DIR/deriving-coerce-pointee-neg.rs:141:1
   |
LL | struct TryToWipeRepr<'a, #[pointee] T: ?Sized> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0802]: `derive(CoercePointee)` is derived multiple times
  --> $DIR/deriving-coerce-pointee-neg.rs:146:10
   |
LL | #[derive(CoercePointee, CoercePointee)]
   |          ^^^^^^^^^^^^^  ^^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `CoercePointee` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0802]: `derive(CoercePointee)` is derived multiple times
  --> $DIR/deriving-coerce-pointee-neg.rs:146:10
   |
LL | #[derive(CoercePointee, CoercePointee)]
   |          ^^^^^^^^^^^^^  ^^^^^^^^^^^^^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `CoercePointee` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Box<T>: Unsize<Box<T {coerced}>>` is not satisfied
  --> $DIR/deriving-coerce-pointee-neg.rs:155:10
   |
LL | #[derive(CoercePointee)]
   |          ^^^^^^^^^^^^^ the trait `Unsize<Box<T {coerced}>>` is not implemented for `Box<T>`
   |
   = note: all implementations of `Unsize` are provided automatically by the compiler, see <https://doc.rust-lang.org/stable/std/marker/trait.Unsize.html> for more information
   = note: this error originates in the derive macro `CoercePointee` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0802]: `CoercePointee` can only be derived on `struct`s with at least one field with a `pointee` type
  --> $DIR/deriving-coerce-pointee-neg.rs:18:1
   |
LL | struct NoField<'a, #[pointee] T: ?Sized> {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0802]: `CoercePointee` can only be derived on `struct`s with at least one field with a `pointee` type
  --> $DIR/deriving-coerce-pointee-neg.rs:25:1
   |
LL | struct NoFieldUnit<'a, #[pointee] T: ?Sized>();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: the trait bound `Box<T>: Unsize<Box<T {coerced}>>` is not satisfied
  --> $DIR/deriving-coerce-pointee-neg.rs:155:10
   |
LL | #[derive(CoercePointee)]
   |          ^^^^^^^^^^^^^ the trait `Unsize<Box<T {coerced}>>` is not implemented for `Box<T>`
   |
   = note: all implementations of `Unsize` are provided automatically by the compiler, see <https://doc.rust-lang.org/stable/std/marker/trait.Unsize.html> for more information
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `CoercePointee` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0392]: lifetime parameter `'a` is never used
  --> $DIR/deriving-coerce-pointee-neg.rs:25:20
   |
LL | struct NoFieldUnit<'a, #[pointee] T: ?Sized>();
   |                    ^^ unused lifetime parameter
   |
   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`

error[E0392]: type parameter `T` is never used
  --> $DIR/deriving-coerce-pointee-neg.rs:25:35
   |
LL | struct NoFieldUnit<'a, #[pointee] T: ?Sized>();
   |                                   ^ unused type parameter
   |
   = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`

error: aborting due to 21 previous errors

Some errors have detailed explanations: E0277, E0392, E0802.
For more information about an error, try `rustc --explain E0277`.
